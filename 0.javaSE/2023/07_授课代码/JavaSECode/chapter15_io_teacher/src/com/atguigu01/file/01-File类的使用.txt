
1. File类的理解
> File类位于java.io包下，本章中涉及到的相关流也都声明在java.io包下。
> File类的一个对象，对应与操作系统下的一个文件或一个文件目录（或文件夹）
> File类中声明了新建、删除、获取名称、重命名等方法，并没有涉及到文件内容的读写操作。要想实现文件内容的读写，
  我们就需要使用io流。
> File类的对象，通常是作为io流操作的文件的端点出现的。
       > 代码层面，将File类的对象作为参数传递到IO流相关类的构造器中。

2. 内部api使用说明
2.1 构造器
public File(String pathname)  ：以pathname为路径创建File对象，可以是绝对路径或者相对路径，如果pathname是相对路径，则默认的当前路径在系统属性user.dir中存储。
public File(String parent, String child)  ：以parent为父路径，child为子路径创建File对象。
public File(File parent, String child) ：根据一个父File对象和子文件路径创建File对象

2.2 方法
获取文件和目录基本信息
    * public String getName() ：获取名称
    * public String getPath() ：获取路径
    * `public String getAbsolutePath()`：获取绝对路径
    * public File getAbsoluteFile()：获取绝对路径表示的文件
    * `public String getParent()`：获取上层文件目录路径。若无，返回null
    * public long length() ：获取文件长度（即：字节数）。不能获取目录的长度。
    * public long lastModified() ：获取最后一次的修改时间，毫秒值
列出目录的下一级
     * public String[] list() ：返回一个String数组，表示该File目录中的所有子文件或目录。
     * public File[] listFiles() ：返回一个File数组，表示该File目录中的所有的子文件或目录。
File类的重命名功能
    - public boolean renameTo(File dest):把文件重命名为指定的文件路径。
判断功能的方法
    - `public boolean exists()` ：此File表示的文件或目录是否实际存在。
    - `public boolean isDirectory()` ：此File表示的是否为目录。
    - `public boolean isFile()` ：此File表示的是否为文件。
    - public boolean canRead() ：判断是否可读
    - public boolean canWrite() ：判断是否可写
    - public boolean isHidden() ：判断是否隐藏
创建、删除功能
    - `public boolean createNewFile()` ：创建文件。若文件存在，则不创建，返回false。
    - `public boolean mkdir()` ：创建文件目录。如果此文件目录存在，就不创建了。如果此文件目录的上层目录不存在，也不创建。
    - `public boolean mkdirs()` ：创建文件目录。如果上层文件目录不存在，一并创建。
    - `public boolean delete()` ：删除文件或者文件夹
      删除注意事项：① Java中的删除不走回收站。② 要删除一个文件目录，请注意该文件目录内不能包含文件或者文件目录。


3. 概念：
绝对路径：以windows操作系统为例，包括盘符在内的文件或文件目录的完整路径。

相对路径：相对于某一个文件目录来讲的相对的位置。
        在IDEA中，如果使用单元测试方法：相对于当前的module来讲
                 如果使用main()方法：相对于当前的project来讲


