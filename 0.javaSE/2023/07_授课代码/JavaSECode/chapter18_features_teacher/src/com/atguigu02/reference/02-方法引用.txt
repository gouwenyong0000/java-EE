
1. 举例：
Integer :: compare;

2. 方法引用的理解
> 方法引用，可以看做是基于lambda表达式的进一步刻画。
> 当需要提供一个函数式接口的实例时，我们可以使用lambda表达式提供此实例。
    > 当满足一定的条件的情况下，我们还可以使用方法引用或构造器引用替换lambda表达式。

3. 方法引用的本质：
方法引用作为了函数式接口的实例。  ---> “万事万物皆对象”

4. 格式：
类(或对象) :: 方法名

5. 具体使用情况说明：
情况1：对象 :: 实例方法

要求：函数式接口中的抽象方法a与其内部实现时调用的对象的某个方法b的形参列表和返回值类型都相同(或一致)。
此时，可以考虑使用方法b实现对方法a的替换、覆盖。此替换或覆盖即为方法引用。

注意：此方法b是非静态的方法，需要对象调用。


情况2：类 :: 静态方法

要求：函数式接口中的抽象方法a与其内部实现时调用的类的某个静态方法b的形参列表和返回值类型都相同(或一致)。
此时，可以考虑使用方法b实现对方法a的替换、覆盖。此替换或覆盖即为方法引用。

注意：此方法b是静态的方法，需要类调用。


情况3： 类 :: 实例方法

要求：函数式接口中的抽象方法a与其内部实现时调用的对象的某个方法b的返回值类型相同。
    同时，抽象方法a中有n个参数，方法b中有n-1个参数，且抽象方法a的第1个参数作为方法b的调用者，且抽象方法a
    的后n-1个参数与方法b的n-1个参数的类型相同(或一致)。则可以考虑使用方法b实现对方法a的替换、覆盖。此替换或覆盖即为方法引用。

注意：此方法b是非静态的方法，需要对象调用。但是形式上，写出对象a所属的类 （笔误，改为：写成对象所属的类）
